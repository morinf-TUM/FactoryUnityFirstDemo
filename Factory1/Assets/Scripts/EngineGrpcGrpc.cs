// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: engine_grpc.proto
// </auto-generated>
// Original file comments:
//
// NRP Core - Backend infrastructure to synchronize simulations
//
// Copyright 2022-2023 Josip Josifovski, Krzysztof Lebioda
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// This project has received funding from the European Unionâ€™s Horizon 2020
// Framework Programme for Research and Innovation under the Specific Grant
// Agreement No. 945539 (Human Brain Project SGA3).
//
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace EngineGrpc {
  /// <summary>
  ///
  /// Remote Procedure Calls available to the gRPC engine
  /// These are commands that the engine client can send to the engine server
  /// </summary>
  public static partial class EngineGrpcService
  {
    static readonly string __ServiceName = "EngineGrpc.EngineGrpcService";

    static readonly grpc::Marshaller<global::EngineGrpc.InitializeRequest> __Marshaller_EngineGrpc_InitializeRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EngineGrpc.InitializeRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::EngineGrpc.InitializeReply> __Marshaller_EngineGrpc_InitializeReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EngineGrpc.InitializeReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::EngineGrpc.ShutdownRequest> __Marshaller_EngineGrpc_ShutdownRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EngineGrpc.ShutdownRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::EngineGrpc.ShutdownReply> __Marshaller_EngineGrpc_ShutdownReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EngineGrpc.ShutdownReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::EngineGrpc.RunLoopStepRequest> __Marshaller_EngineGrpc_RunLoopStepRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EngineGrpc.RunLoopStepRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::EngineGrpc.RunLoopStepReply> __Marshaller_EngineGrpc_RunLoopStepReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EngineGrpc.RunLoopStepReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::EngineGrpc.SetDataPacksRequest> __Marshaller_EngineGrpc_SetDataPacksRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EngineGrpc.SetDataPacksRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::EngineGrpc.SetDataPacksReply> __Marshaller_EngineGrpc_SetDataPacksReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EngineGrpc.SetDataPacksReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::EngineGrpc.GetDataPacksRequest> __Marshaller_EngineGrpc_GetDataPacksRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EngineGrpc.GetDataPacksRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::EngineGrpc.GetDataPacksReply> __Marshaller_EngineGrpc_GetDataPacksReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EngineGrpc.GetDataPacksReply.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::EngineGrpc.ResetRequest> __Marshaller_EngineGrpc_ResetRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EngineGrpc.ResetRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::EngineGrpc.ResetReply> __Marshaller_EngineGrpc_ResetReply = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::EngineGrpc.ResetReply.Parser.ParseFrom);

    static readonly grpc::Method<global::EngineGrpc.InitializeRequest, global::EngineGrpc.InitializeReply> __Method_initialize = new grpc::Method<global::EngineGrpc.InitializeRequest, global::EngineGrpc.InitializeReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "initialize",
        __Marshaller_EngineGrpc_InitializeRequest,
        __Marshaller_EngineGrpc_InitializeReply);

    static readonly grpc::Method<global::EngineGrpc.ShutdownRequest, global::EngineGrpc.ShutdownReply> __Method_shutdown = new grpc::Method<global::EngineGrpc.ShutdownRequest, global::EngineGrpc.ShutdownReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "shutdown",
        __Marshaller_EngineGrpc_ShutdownRequest,
        __Marshaller_EngineGrpc_ShutdownReply);

    static readonly grpc::Method<global::EngineGrpc.RunLoopStepRequest, global::EngineGrpc.RunLoopStepReply> __Method_runLoopStep = new grpc::Method<global::EngineGrpc.RunLoopStepRequest, global::EngineGrpc.RunLoopStepReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "runLoopStep",
        __Marshaller_EngineGrpc_RunLoopStepRequest,
        __Marshaller_EngineGrpc_RunLoopStepReply);

    static readonly grpc::Method<global::EngineGrpc.SetDataPacksRequest, global::EngineGrpc.SetDataPacksReply> __Method_setDataPacks = new grpc::Method<global::EngineGrpc.SetDataPacksRequest, global::EngineGrpc.SetDataPacksReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "setDataPacks",
        __Marshaller_EngineGrpc_SetDataPacksRequest,
        __Marshaller_EngineGrpc_SetDataPacksReply);

    static readonly grpc::Method<global::EngineGrpc.GetDataPacksRequest, global::EngineGrpc.GetDataPacksReply> __Method_getDataPacks = new grpc::Method<global::EngineGrpc.GetDataPacksRequest, global::EngineGrpc.GetDataPacksReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "getDataPacks",
        __Marshaller_EngineGrpc_GetDataPacksRequest,
        __Marshaller_EngineGrpc_GetDataPacksReply);

    static readonly grpc::Method<global::EngineGrpc.ResetRequest, global::EngineGrpc.ResetReply> __Method_reset = new grpc::Method<global::EngineGrpc.ResetRequest, global::EngineGrpc.ResetReply>(
        grpc::MethodType.Unary,
        __ServiceName,
        "reset",
        __Marshaller_EngineGrpc_ResetRequest,
        __Marshaller_EngineGrpc_ResetReply);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::EngineGrpc.EngineGrpcReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of EngineGrpcService</summary>
    public abstract partial class EngineGrpcServiceBase
    {
      public virtual global::System.Threading.Tasks.Task<global::EngineGrpc.InitializeReply> initialize(global::EngineGrpc.InitializeRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EngineGrpc.ShutdownReply> shutdown(global::EngineGrpc.ShutdownRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EngineGrpc.RunLoopStepReply> runLoopStep(global::EngineGrpc.RunLoopStepRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EngineGrpc.SetDataPacksReply> setDataPacks(global::EngineGrpc.SetDataPacksRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EngineGrpc.GetDataPacksReply> getDataPacks(global::EngineGrpc.GetDataPacksRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::EngineGrpc.ResetReply> reset(global::EngineGrpc.ResetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for EngineGrpcService</summary>
    public partial class EngineGrpcServiceClient : grpc::ClientBase<EngineGrpcServiceClient>
    {
      /// <summary>Creates a new client for EngineGrpcService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public EngineGrpcServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for EngineGrpcService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public EngineGrpcServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected EngineGrpcServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected EngineGrpcServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      public virtual global::EngineGrpc.InitializeReply initialize(global::EngineGrpc.InitializeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return initialize(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::EngineGrpc.InitializeReply initialize(global::EngineGrpc.InitializeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_initialize, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::EngineGrpc.InitializeReply> initializeAsync(global::EngineGrpc.InitializeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return initializeAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::EngineGrpc.InitializeReply> initializeAsync(global::EngineGrpc.InitializeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_initialize, null, options, request);
      }
      public virtual global::EngineGrpc.ShutdownReply shutdown(global::EngineGrpc.ShutdownRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return shutdown(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::EngineGrpc.ShutdownReply shutdown(global::EngineGrpc.ShutdownRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_shutdown, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::EngineGrpc.ShutdownReply> shutdownAsync(global::EngineGrpc.ShutdownRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return shutdownAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::EngineGrpc.ShutdownReply> shutdownAsync(global::EngineGrpc.ShutdownRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_shutdown, null, options, request);
      }
      public virtual global::EngineGrpc.RunLoopStepReply runLoopStep(global::EngineGrpc.RunLoopStepRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return runLoopStep(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::EngineGrpc.RunLoopStepReply runLoopStep(global::EngineGrpc.RunLoopStepRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_runLoopStep, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::EngineGrpc.RunLoopStepReply> runLoopStepAsync(global::EngineGrpc.RunLoopStepRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return runLoopStepAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::EngineGrpc.RunLoopStepReply> runLoopStepAsync(global::EngineGrpc.RunLoopStepRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_runLoopStep, null, options, request);
      }
      public virtual global::EngineGrpc.SetDataPacksReply setDataPacks(global::EngineGrpc.SetDataPacksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return setDataPacks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::EngineGrpc.SetDataPacksReply setDataPacks(global::EngineGrpc.SetDataPacksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_setDataPacks, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::EngineGrpc.SetDataPacksReply> setDataPacksAsync(global::EngineGrpc.SetDataPacksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return setDataPacksAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::EngineGrpc.SetDataPacksReply> setDataPacksAsync(global::EngineGrpc.SetDataPacksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_setDataPacks, null, options, request);
      }
      public virtual global::EngineGrpc.GetDataPacksReply getDataPacks(global::EngineGrpc.GetDataPacksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getDataPacks(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::EngineGrpc.GetDataPacksReply getDataPacks(global::EngineGrpc.GetDataPacksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_getDataPacks, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::EngineGrpc.GetDataPacksReply> getDataPacksAsync(global::EngineGrpc.GetDataPacksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return getDataPacksAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::EngineGrpc.GetDataPacksReply> getDataPacksAsync(global::EngineGrpc.GetDataPacksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_getDataPacks, null, options, request);
      }
      public virtual global::EngineGrpc.ResetReply reset(global::EngineGrpc.ResetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return reset(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::EngineGrpc.ResetReply reset(global::EngineGrpc.ResetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_reset, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::EngineGrpc.ResetReply> resetAsync(global::EngineGrpc.ResetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return resetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::EngineGrpc.ResetReply> resetAsync(global::EngineGrpc.ResetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_reset, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override EngineGrpcServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new EngineGrpcServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(EngineGrpcServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_initialize, serviceImpl.initialize)
          .AddMethod(__Method_shutdown, serviceImpl.shutdown)
          .AddMethod(__Method_runLoopStep, serviceImpl.runLoopStep)
          .AddMethod(__Method_setDataPacks, serviceImpl.setDataPacks)
          .AddMethod(__Method_getDataPacks, serviceImpl.getDataPacks)
          .AddMethod(__Method_reset, serviceImpl.reset).Build();
    }

  }
}
#endregion
