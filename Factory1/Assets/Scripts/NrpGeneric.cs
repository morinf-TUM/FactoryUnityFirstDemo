// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: nrp_generic.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NrpGenericProto {

  /// <summary>Holder for reflection information generated from nrp_generic.proto</summary>
  public static partial class NrpGenericReflection {

    #region Descriptor
    /// <summary>File descriptor for nrp_generic.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NrpGenericReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFucnBfZ2VuZXJpYy5wcm90bxIPTnJwR2VuZXJpY1Byb3RvIisKC0FycmF5",
            "U3RyaW5nEg0KBWFycmF5GAEgAygJEg0KBXNoYXBlGAIgAygNIioKCkFycmF5",
            "Qnl0ZXMSDQoFYXJyYXkYASADKAwSDQoFc2hhcGUYAiADKA0iKgoKQXJyYXlG",
            "bG9hdBINCgVhcnJheRgBIAMoAhINCgVzaGFwZRgCIAMoDSIrCgtBcnJheURv",
            "dWJsZRINCgVhcnJheRgBIAMoARINCgVzaGFwZRgCIAMoDSIqCgpBcnJheUlu",
            "dDMyEg0KBWFycmF5GAEgAygFEg0KBXNoYXBlGAIgAygNIioKCkFycmF5SW50",
            "NjQSDQoFYXJyYXkYASADKAMSDQoFc2hhcGUYAiADKA0iKwoLQXJyYXlTSW50",
            "MzISDQoFYXJyYXkYASADKBESDQoFc2hhcGUYAiADKA0iKwoLQXJyYXlTSW50",
            "NjQSDQoFYXJyYXkYASADKBISDQoFc2hhcGUYAiADKA0iKwoLQXJyYXlVSW50",
            "MzISDQoFYXJyYXkYASADKA0SDQoFc2hhcGUYAiADKA0iKwoLQXJyYXlVSW50",
            "NjQSDQoFYXJyYXkYASADKAQSDQoFc2hhcGUYAiADKA0iKQoJQXJyYXlCb29s",
            "Eg0KBWFycmF5GAEgAygIEg0KBXNoYXBlGAIgAygNIoIBCgVJbWFnZRIOCgZo",
            "ZWlnaHQYASABKA0SDQoFd2lkdGgYAiABKA0SDAoEc3RlcBgDIAEoDRIpCgR0",
            "eXBlGAQgASgOMhsuTnJwR2VuZXJpY1Byb3RvLklNQUdFX1RZUEUSEwoLaXNC",
            "aWdFbmRpYW4YBSABKAgSDAoEZGF0YRgGIAEoDCr9AQoKSU1BR0VfVFlQRRIJ",
            "CgVPVEhFUhAAEggKBFJHQjgQARIJCgVSR0JBOBACEgkKBVJHQjE2EAMSCgoG",
            "UkdCQTE2EAQSCQoFQkdSMTYQBRIKCgZCR1JBMTYQBhIJCgVNT05POBAHEgoK",
            "Bk1PTk8xNhAIEg8KC0JBWUVSX1JHR0I4EAkSDwoLQkFZRVJfQkdHUjgQChIP",
            "CgtCQVlFUl9HQlJHOBALEg8KC0JBWUVSX0dSQkc4EAwSEAoMQkFZRVJfUkdH",
            "QjE2EA0SEAoMQkFZRVJfQkdHUjE2EA4SEAoMQkFZRVJfR0JSRzE2EA8SEAoM",
            "QkFZRVJfR1JCRzE2EBBiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::NrpGenericProto.IMAGE_TYPE), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NrpGenericProto.ArrayString), global::NrpGenericProto.ArrayString.Parser, new[]{ "Array", "Shape" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NrpGenericProto.ArrayBytes), global::NrpGenericProto.ArrayBytes.Parser, new[]{ "Array", "Shape" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NrpGenericProto.ArrayFloat), global::NrpGenericProto.ArrayFloat.Parser, new[]{ "Array", "Shape" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NrpGenericProto.ArrayDouble), global::NrpGenericProto.ArrayDouble.Parser, new[]{ "Array", "Shape" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NrpGenericProto.ArrayInt32), global::NrpGenericProto.ArrayInt32.Parser, new[]{ "Array", "Shape" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NrpGenericProto.ArrayInt64), global::NrpGenericProto.ArrayInt64.Parser, new[]{ "Array", "Shape" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NrpGenericProto.ArraySInt32), global::NrpGenericProto.ArraySInt32.Parser, new[]{ "Array", "Shape" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NrpGenericProto.ArraySInt64), global::NrpGenericProto.ArraySInt64.Parser, new[]{ "Array", "Shape" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NrpGenericProto.ArrayUInt32), global::NrpGenericProto.ArrayUInt32.Parser, new[]{ "Array", "Shape" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NrpGenericProto.ArrayUInt64), global::NrpGenericProto.ArrayUInt64.Parser, new[]{ "Array", "Shape" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NrpGenericProto.ArrayBool), global::NrpGenericProto.ArrayBool.Parser, new[]{ "Array", "Shape" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NrpGenericProto.Image), global::NrpGenericProto.Image.Parser, new[]{ "Height", "Width", "Step", "Type", "IsBigEndian", "Data" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum IMAGE_TYPE {
    [pbr::OriginalName("OTHER")] Other = 0,
    [pbr::OriginalName("RGB8")] Rgb8 = 1,
    [pbr::OriginalName("RGBA8")] Rgba8 = 2,
    [pbr::OriginalName("RGB16")] Rgb16 = 3,
    [pbr::OriginalName("RGBA16")] Rgba16 = 4,
    [pbr::OriginalName("BGR16")] Bgr16 = 5,
    [pbr::OriginalName("BGRA16")] Bgra16 = 6,
    [pbr::OriginalName("MONO8")] Mono8 = 7,
    [pbr::OriginalName("MONO16")] Mono16 = 8,
    [pbr::OriginalName("BAYER_RGGB8")] BayerRggb8 = 9,
    [pbr::OriginalName("BAYER_BGGR8")] BayerBggr8 = 10,
    [pbr::OriginalName("BAYER_GBRG8")] BayerGbrg8 = 11,
    [pbr::OriginalName("BAYER_GRBG8")] BayerGrbg8 = 12,
    [pbr::OriginalName("BAYER_RGGB16")] BayerRggb16 = 13,
    [pbr::OriginalName("BAYER_BGGR16")] BayerBggr16 = 14,
    [pbr::OriginalName("BAYER_GBRG16")] BayerGbrg16 = 15,
    [pbr::OriginalName("BAYER_GRBG16")] BayerGrbg16 = 16,
  }

  #endregion

  #region Messages
  public sealed partial class ArrayString : pb::IMessage<ArrayString> {
    private static readonly pb::MessageParser<ArrayString> _parser = new pb::MessageParser<ArrayString>(() => new ArrayString());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArrayString> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NrpGenericProto.NrpGenericReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayString() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayString(ArrayString other) : this() {
      array_ = other.array_.Clone();
      shape_ = other.shape_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayString Clone() {
      return new ArrayString(this);
    }

    /// <summary>Field number for the "array" field.</summary>
    public const int ArrayFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_array_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> array_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Array {
      get { return array_; }
    }

    /// <summary>Field number for the "shape" field.</summary>
    public const int ShapeFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_shape_codec
        = pb::FieldCodec.ForUInt32(18);
    private readonly pbc::RepeatedField<uint> shape_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Shape {
      get { return shape_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArrayString);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArrayString other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!array_.Equals(other.array_)) return false;
      if(!shape_.Equals(other.shape_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= array_.GetHashCode();
      hash ^= shape_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      array_.WriteTo(output, _repeated_array_codec);
      shape_.WriteTo(output, _repeated_shape_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += array_.CalculateSize(_repeated_array_codec);
      size += shape_.CalculateSize(_repeated_shape_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArrayString other) {
      if (other == null) {
        return;
      }
      array_.Add(other.array_);
      shape_.Add(other.shape_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            array_.AddEntriesFrom(input, _repeated_array_codec);
            break;
          }
          case 18:
          case 16: {
            shape_.AddEntriesFrom(input, _repeated_shape_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ArrayBytes : pb::IMessage<ArrayBytes> {
    private static readonly pb::MessageParser<ArrayBytes> _parser = new pb::MessageParser<ArrayBytes>(() => new ArrayBytes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArrayBytes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NrpGenericProto.NrpGenericReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayBytes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayBytes(ArrayBytes other) : this() {
      array_ = other.array_.Clone();
      shape_ = other.shape_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayBytes Clone() {
      return new ArrayBytes(this);
    }

    /// <summary>Field number for the "array" field.</summary>
    public const int ArrayFieldNumber = 1;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_array_codec
        = pb::FieldCodec.ForBytes(10);
    private readonly pbc::RepeatedField<pb::ByteString> array_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Array {
      get { return array_; }
    }

    /// <summary>Field number for the "shape" field.</summary>
    public const int ShapeFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_shape_codec
        = pb::FieldCodec.ForUInt32(18);
    private readonly pbc::RepeatedField<uint> shape_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Shape {
      get { return shape_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArrayBytes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArrayBytes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!array_.Equals(other.array_)) return false;
      if(!shape_.Equals(other.shape_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= array_.GetHashCode();
      hash ^= shape_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      array_.WriteTo(output, _repeated_array_codec);
      shape_.WriteTo(output, _repeated_shape_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += array_.CalculateSize(_repeated_array_codec);
      size += shape_.CalculateSize(_repeated_shape_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArrayBytes other) {
      if (other == null) {
        return;
      }
      array_.Add(other.array_);
      shape_.Add(other.shape_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            array_.AddEntriesFrom(input, _repeated_array_codec);
            break;
          }
          case 18:
          case 16: {
            shape_.AddEntriesFrom(input, _repeated_shape_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ArrayFloat : pb::IMessage<ArrayFloat> {
    private static readonly pb::MessageParser<ArrayFloat> _parser = new pb::MessageParser<ArrayFloat>(() => new ArrayFloat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArrayFloat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NrpGenericProto.NrpGenericReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayFloat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayFloat(ArrayFloat other) : this() {
      array_ = other.array_.Clone();
      shape_ = other.shape_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayFloat Clone() {
      return new ArrayFloat(this);
    }

    /// <summary>Field number for the "array" field.</summary>
    public const int ArrayFieldNumber = 1;
    private static readonly pb::FieldCodec<float> _repeated_array_codec
        = pb::FieldCodec.ForFloat(10);
    private readonly pbc::RepeatedField<float> array_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> Array {
      get { return array_; }
    }

    /// <summary>Field number for the "shape" field.</summary>
    public const int ShapeFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_shape_codec
        = pb::FieldCodec.ForUInt32(18);
    private readonly pbc::RepeatedField<uint> shape_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Shape {
      get { return shape_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArrayFloat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArrayFloat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!array_.Equals(other.array_)) return false;
      if(!shape_.Equals(other.shape_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= array_.GetHashCode();
      hash ^= shape_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      array_.WriteTo(output, _repeated_array_codec);
      shape_.WriteTo(output, _repeated_shape_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += array_.CalculateSize(_repeated_array_codec);
      size += shape_.CalculateSize(_repeated_shape_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArrayFloat other) {
      if (other == null) {
        return;
      }
      array_.Add(other.array_);
      shape_.Add(other.shape_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 13: {
            array_.AddEntriesFrom(input, _repeated_array_codec);
            break;
          }
          case 18:
          case 16: {
            shape_.AddEntriesFrom(input, _repeated_shape_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ArrayDouble : pb::IMessage<ArrayDouble> {
    private static readonly pb::MessageParser<ArrayDouble> _parser = new pb::MessageParser<ArrayDouble>(() => new ArrayDouble());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArrayDouble> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NrpGenericProto.NrpGenericReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayDouble() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayDouble(ArrayDouble other) : this() {
      array_ = other.array_.Clone();
      shape_ = other.shape_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayDouble Clone() {
      return new ArrayDouble(this);
    }

    /// <summary>Field number for the "array" field.</summary>
    public const int ArrayFieldNumber = 1;
    private static readonly pb::FieldCodec<double> _repeated_array_codec
        = pb::FieldCodec.ForDouble(10);
    private readonly pbc::RepeatedField<double> array_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> Array {
      get { return array_; }
    }

    /// <summary>Field number for the "shape" field.</summary>
    public const int ShapeFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_shape_codec
        = pb::FieldCodec.ForUInt32(18);
    private readonly pbc::RepeatedField<uint> shape_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Shape {
      get { return shape_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArrayDouble);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArrayDouble other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!array_.Equals(other.array_)) return false;
      if(!shape_.Equals(other.shape_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= array_.GetHashCode();
      hash ^= shape_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      array_.WriteTo(output, _repeated_array_codec);
      shape_.WriteTo(output, _repeated_shape_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += array_.CalculateSize(_repeated_array_codec);
      size += shape_.CalculateSize(_repeated_shape_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArrayDouble other) {
      if (other == null) {
        return;
      }
      array_.Add(other.array_);
      shape_.Add(other.shape_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 9: {
            array_.AddEntriesFrom(input, _repeated_array_codec);
            break;
          }
          case 18:
          case 16: {
            shape_.AddEntriesFrom(input, _repeated_shape_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ArrayInt32 : pb::IMessage<ArrayInt32> {
    private static readonly pb::MessageParser<ArrayInt32> _parser = new pb::MessageParser<ArrayInt32>(() => new ArrayInt32());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArrayInt32> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NrpGenericProto.NrpGenericReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayInt32() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayInt32(ArrayInt32 other) : this() {
      array_ = other.array_.Clone();
      shape_ = other.shape_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayInt32 Clone() {
      return new ArrayInt32(this);
    }

    /// <summary>Field number for the "array" field.</summary>
    public const int ArrayFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_array_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> array_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Array {
      get { return array_; }
    }

    /// <summary>Field number for the "shape" field.</summary>
    public const int ShapeFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_shape_codec
        = pb::FieldCodec.ForUInt32(18);
    private readonly pbc::RepeatedField<uint> shape_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Shape {
      get { return shape_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArrayInt32);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArrayInt32 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!array_.Equals(other.array_)) return false;
      if(!shape_.Equals(other.shape_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= array_.GetHashCode();
      hash ^= shape_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      array_.WriteTo(output, _repeated_array_codec);
      shape_.WriteTo(output, _repeated_shape_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += array_.CalculateSize(_repeated_array_codec);
      size += shape_.CalculateSize(_repeated_shape_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArrayInt32 other) {
      if (other == null) {
        return;
      }
      array_.Add(other.array_);
      shape_.Add(other.shape_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            array_.AddEntriesFrom(input, _repeated_array_codec);
            break;
          }
          case 18:
          case 16: {
            shape_.AddEntriesFrom(input, _repeated_shape_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ArrayInt64 : pb::IMessage<ArrayInt64> {
    private static readonly pb::MessageParser<ArrayInt64> _parser = new pb::MessageParser<ArrayInt64>(() => new ArrayInt64());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArrayInt64> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NrpGenericProto.NrpGenericReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayInt64() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayInt64(ArrayInt64 other) : this() {
      array_ = other.array_.Clone();
      shape_ = other.shape_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayInt64 Clone() {
      return new ArrayInt64(this);
    }

    /// <summary>Field number for the "array" field.</summary>
    public const int ArrayFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_array_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> array_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Array {
      get { return array_; }
    }

    /// <summary>Field number for the "shape" field.</summary>
    public const int ShapeFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_shape_codec
        = pb::FieldCodec.ForUInt32(18);
    private readonly pbc::RepeatedField<uint> shape_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Shape {
      get { return shape_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArrayInt64);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArrayInt64 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!array_.Equals(other.array_)) return false;
      if(!shape_.Equals(other.shape_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= array_.GetHashCode();
      hash ^= shape_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      array_.WriteTo(output, _repeated_array_codec);
      shape_.WriteTo(output, _repeated_shape_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += array_.CalculateSize(_repeated_array_codec);
      size += shape_.CalculateSize(_repeated_shape_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArrayInt64 other) {
      if (other == null) {
        return;
      }
      array_.Add(other.array_);
      shape_.Add(other.shape_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            array_.AddEntriesFrom(input, _repeated_array_codec);
            break;
          }
          case 18:
          case 16: {
            shape_.AddEntriesFrom(input, _repeated_shape_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ArraySInt32 : pb::IMessage<ArraySInt32> {
    private static readonly pb::MessageParser<ArraySInt32> _parser = new pb::MessageParser<ArraySInt32>(() => new ArraySInt32());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArraySInt32> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NrpGenericProto.NrpGenericReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArraySInt32() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArraySInt32(ArraySInt32 other) : this() {
      array_ = other.array_.Clone();
      shape_ = other.shape_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArraySInt32 Clone() {
      return new ArraySInt32(this);
    }

    /// <summary>Field number for the "array" field.</summary>
    public const int ArrayFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_array_codec
        = pb::FieldCodec.ForSInt32(10);
    private readonly pbc::RepeatedField<int> array_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Array {
      get { return array_; }
    }

    /// <summary>Field number for the "shape" field.</summary>
    public const int ShapeFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_shape_codec
        = pb::FieldCodec.ForUInt32(18);
    private readonly pbc::RepeatedField<uint> shape_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Shape {
      get { return shape_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArraySInt32);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArraySInt32 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!array_.Equals(other.array_)) return false;
      if(!shape_.Equals(other.shape_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= array_.GetHashCode();
      hash ^= shape_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      array_.WriteTo(output, _repeated_array_codec);
      shape_.WriteTo(output, _repeated_shape_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += array_.CalculateSize(_repeated_array_codec);
      size += shape_.CalculateSize(_repeated_shape_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArraySInt32 other) {
      if (other == null) {
        return;
      }
      array_.Add(other.array_);
      shape_.Add(other.shape_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            array_.AddEntriesFrom(input, _repeated_array_codec);
            break;
          }
          case 18:
          case 16: {
            shape_.AddEntriesFrom(input, _repeated_shape_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ArraySInt64 : pb::IMessage<ArraySInt64> {
    private static readonly pb::MessageParser<ArraySInt64> _parser = new pb::MessageParser<ArraySInt64>(() => new ArraySInt64());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArraySInt64> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NrpGenericProto.NrpGenericReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArraySInt64() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArraySInt64(ArraySInt64 other) : this() {
      array_ = other.array_.Clone();
      shape_ = other.shape_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArraySInt64 Clone() {
      return new ArraySInt64(this);
    }

    /// <summary>Field number for the "array" field.</summary>
    public const int ArrayFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_array_codec
        = pb::FieldCodec.ForSInt64(10);
    private readonly pbc::RepeatedField<long> array_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Array {
      get { return array_; }
    }

    /// <summary>Field number for the "shape" field.</summary>
    public const int ShapeFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_shape_codec
        = pb::FieldCodec.ForUInt32(18);
    private readonly pbc::RepeatedField<uint> shape_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Shape {
      get { return shape_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArraySInt64);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArraySInt64 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!array_.Equals(other.array_)) return false;
      if(!shape_.Equals(other.shape_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= array_.GetHashCode();
      hash ^= shape_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      array_.WriteTo(output, _repeated_array_codec);
      shape_.WriteTo(output, _repeated_shape_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += array_.CalculateSize(_repeated_array_codec);
      size += shape_.CalculateSize(_repeated_shape_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArraySInt64 other) {
      if (other == null) {
        return;
      }
      array_.Add(other.array_);
      shape_.Add(other.shape_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            array_.AddEntriesFrom(input, _repeated_array_codec);
            break;
          }
          case 18:
          case 16: {
            shape_.AddEntriesFrom(input, _repeated_shape_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ArrayUInt32 : pb::IMessage<ArrayUInt32> {
    private static readonly pb::MessageParser<ArrayUInt32> _parser = new pb::MessageParser<ArrayUInt32>(() => new ArrayUInt32());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArrayUInt32> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NrpGenericProto.NrpGenericReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayUInt32() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayUInt32(ArrayUInt32 other) : this() {
      array_ = other.array_.Clone();
      shape_ = other.shape_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayUInt32 Clone() {
      return new ArrayUInt32(this);
    }

    /// <summary>Field number for the "array" field.</summary>
    public const int ArrayFieldNumber = 1;
    private static readonly pb::FieldCodec<uint> _repeated_array_codec
        = pb::FieldCodec.ForUInt32(10);
    private readonly pbc::RepeatedField<uint> array_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Array {
      get { return array_; }
    }

    /// <summary>Field number for the "shape" field.</summary>
    public const int ShapeFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_shape_codec
        = pb::FieldCodec.ForUInt32(18);
    private readonly pbc::RepeatedField<uint> shape_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Shape {
      get { return shape_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArrayUInt32);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArrayUInt32 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!array_.Equals(other.array_)) return false;
      if(!shape_.Equals(other.shape_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= array_.GetHashCode();
      hash ^= shape_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      array_.WriteTo(output, _repeated_array_codec);
      shape_.WriteTo(output, _repeated_shape_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += array_.CalculateSize(_repeated_array_codec);
      size += shape_.CalculateSize(_repeated_shape_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArrayUInt32 other) {
      if (other == null) {
        return;
      }
      array_.Add(other.array_);
      shape_.Add(other.shape_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            array_.AddEntriesFrom(input, _repeated_array_codec);
            break;
          }
          case 18:
          case 16: {
            shape_.AddEntriesFrom(input, _repeated_shape_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ArrayUInt64 : pb::IMessage<ArrayUInt64> {
    private static readonly pb::MessageParser<ArrayUInt64> _parser = new pb::MessageParser<ArrayUInt64>(() => new ArrayUInt64());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArrayUInt64> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NrpGenericProto.NrpGenericReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayUInt64() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayUInt64(ArrayUInt64 other) : this() {
      array_ = other.array_.Clone();
      shape_ = other.shape_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayUInt64 Clone() {
      return new ArrayUInt64(this);
    }

    /// <summary>Field number for the "array" field.</summary>
    public const int ArrayFieldNumber = 1;
    private static readonly pb::FieldCodec<ulong> _repeated_array_codec
        = pb::FieldCodec.ForUInt64(10);
    private readonly pbc::RepeatedField<ulong> array_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> Array {
      get { return array_; }
    }

    /// <summary>Field number for the "shape" field.</summary>
    public const int ShapeFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_shape_codec
        = pb::FieldCodec.ForUInt32(18);
    private readonly pbc::RepeatedField<uint> shape_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Shape {
      get { return shape_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArrayUInt64);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArrayUInt64 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!array_.Equals(other.array_)) return false;
      if(!shape_.Equals(other.shape_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= array_.GetHashCode();
      hash ^= shape_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      array_.WriteTo(output, _repeated_array_codec);
      shape_.WriteTo(output, _repeated_shape_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += array_.CalculateSize(_repeated_array_codec);
      size += shape_.CalculateSize(_repeated_shape_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArrayUInt64 other) {
      if (other == null) {
        return;
      }
      array_.Add(other.array_);
      shape_.Add(other.shape_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            array_.AddEntriesFrom(input, _repeated_array_codec);
            break;
          }
          case 18:
          case 16: {
            shape_.AddEntriesFrom(input, _repeated_shape_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ArrayBool : pb::IMessage<ArrayBool> {
    private static readonly pb::MessageParser<ArrayBool> _parser = new pb::MessageParser<ArrayBool>(() => new ArrayBool());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ArrayBool> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NrpGenericProto.NrpGenericReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayBool() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayBool(ArrayBool other) : this() {
      array_ = other.array_.Clone();
      shape_ = other.shape_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ArrayBool Clone() {
      return new ArrayBool(this);
    }

    /// <summary>Field number for the "array" field.</summary>
    public const int ArrayFieldNumber = 1;
    private static readonly pb::FieldCodec<bool> _repeated_array_codec
        = pb::FieldCodec.ForBool(10);
    private readonly pbc::RepeatedField<bool> array_ = new pbc::RepeatedField<bool>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<bool> Array {
      get { return array_; }
    }

    /// <summary>Field number for the "shape" field.</summary>
    public const int ShapeFieldNumber = 2;
    private static readonly pb::FieldCodec<uint> _repeated_shape_codec
        = pb::FieldCodec.ForUInt32(18);
    private readonly pbc::RepeatedField<uint> shape_ = new pbc::RepeatedField<uint>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<uint> Shape {
      get { return shape_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ArrayBool);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ArrayBool other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!array_.Equals(other.array_)) return false;
      if(!shape_.Equals(other.shape_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= array_.GetHashCode();
      hash ^= shape_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      array_.WriteTo(output, _repeated_array_codec);
      shape_.WriteTo(output, _repeated_shape_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += array_.CalculateSize(_repeated_array_codec);
      size += shape_.CalculateSize(_repeated_shape_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ArrayBool other) {
      if (other == null) {
        return;
      }
      array_.Add(other.array_);
      shape_.Add(other.shape_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            array_.AddEntriesFrom(input, _repeated_array_codec);
            break;
          }
          case 18:
          case 16: {
            shape_.AddEntriesFrom(input, _repeated_shape_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Image : pb::IMessage<Image> {
    private static readonly pb::MessageParser<Image> _parser = new pb::MessageParser<Image>(() => new Image());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Image> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NrpGenericProto.NrpGenericReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Image() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Image(Image other) : this() {
      height_ = other.height_;
      width_ = other.width_;
      step_ = other.step_;
      type_ = other.type_;
      isBigEndian_ = other.isBigEndian_;
      data_ = other.data_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Image Clone() {
      return new Image(this);
    }

    /// <summary>Field number for the "height" field.</summary>
    public const int HeightFieldNumber = 1;
    private uint height_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Height {
      get { return height_; }
      set {
        height_ = value;
      }
    }

    /// <summary>Field number for the "width" field.</summary>
    public const int WidthFieldNumber = 2;
    private uint width_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Width {
      get { return width_; }
      set {
        width_ = value;
      }
    }

    /// <summary>Field number for the "step" field.</summary>
    public const int StepFieldNumber = 3;
    private uint step_;
    /// <summary>
    /// Full row length in bytes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Step {
      get { return step_; }
      set {
        step_ = value;
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 4;
    private global::NrpGenericProto.IMAGE_TYPE type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NrpGenericProto.IMAGE_TYPE Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "isBigEndian" field.</summary>
    public const int IsBigEndianFieldNumber = 5;
    private bool isBigEndian_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsBigEndian {
      get { return isBigEndian_; }
      set {
        isBigEndian_ = value;
      }
    }

    /// <summary>Field number for the "data" field.</summary>
    public const int DataFieldNumber = 6;
    private pb::ByteString data_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Data {
      get { return data_; }
      set {
        data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Image);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Image other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Height != other.Height) return false;
      if (Width != other.Width) return false;
      if (Step != other.Step) return false;
      if (Type != other.Type) return false;
      if (IsBigEndian != other.IsBigEndian) return false;
      if (Data != other.Data) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Height != 0) hash ^= Height.GetHashCode();
      if (Width != 0) hash ^= Width.GetHashCode();
      if (Step != 0) hash ^= Step.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (IsBigEndian != false) hash ^= IsBigEndian.GetHashCode();
      if (Data.Length != 0) hash ^= Data.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Height != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Height);
      }
      if (Width != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(Width);
      }
      if (Step != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Step);
      }
      if (Type != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Type);
      }
      if (IsBigEndian != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsBigEndian);
      }
      if (Data.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(Data);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Height != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Height);
      }
      if (Width != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Width);
      }
      if (Step != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Step);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (IsBigEndian != false) {
        size += 1 + 1;
      }
      if (Data.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Image other) {
      if (other == null) {
        return;
      }
      if (other.Height != 0) {
        Height = other.Height;
      }
      if (other.Width != 0) {
        Width = other.Width;
      }
      if (other.Step != 0) {
        Step = other.Step;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.IsBigEndian != false) {
        IsBigEndian = other.IsBigEndian;
      }
      if (other.Data.Length != 0) {
        Data = other.Data;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Height = input.ReadUInt32();
            break;
          }
          case 16: {
            Width = input.ReadUInt32();
            break;
          }
          case 24: {
            Step = input.ReadUInt32();
            break;
          }
          case 32: {
            type_ = (global::NrpGenericProto.IMAGE_TYPE) input.ReadEnum();
            break;
          }
          case 40: {
            IsBigEndian = input.ReadBool();
            break;
          }
          case 50: {
            Data = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
